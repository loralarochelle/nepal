---
title: "time_series_lora"
format: html
editor: visual
---

Time Series Draft

```{r loading packages and data, echo=FALSE}
suppressPackageStartupMessages({
  library("readr")      # For reading in the data
  library("tibble")     # For handling tidyverse tibble data classes
  library("tidyr")      # For tidying data 
  library("dplyr")      # For data manipulation 
  library("stringr")    # For string manipulation
  library("MASS")       # Functions/datasets for statistical analysis
  library("lubridate")  # For date manipulation
  library("ggplot2")    # For creating static visualizations
  library("scales")     # For formatting plots axis
  library("gridExtra")  # Creates multiple grid-based plots
})
'%!in%' <- function(x,y)!('%in%'(x,y))

df <- read.csv("nepal.csv")
df.gps <- read.csv("nepal_gps.csv")
```

```{r cleaning data & setting up for plotting etc, echo=FALSE}
df.gps <- df.gps %>%
  filter(Year >= 2009) %>%
  filter(In_silico_serotype != "ALTERNATIVE_ALIB_NT" & 
           In_silico_serotype != "SWISS_NT" &
           In_silico_serotype != "COVERAGE TOO LOW" &
           In_silico_serotype != "UNTYPABLE") %>%
  mutate(Disease_Status = ifelse(Clinical_manifestation == "CARRIAGE", 
                                 "Carriage", "Disease"))
pcv10_serotypes <- c('1', '4', '5', '6B', '7F', '9V', '14', '18C', '19F', '23F')
pcv13_serotypes <- c('3', '6A', '19A')
pcv15_serotypes <- c('22F', '33F')
pcv20_serotypes <- c('8', '10A', '11A', '12F', '15B')
df.gps$Serotype_group <- ifelse(
  df.gps$In_silico_serotype %in% pcv10_serotypes, "PCV10",
  ifelse(df.gps$In_silico_serotype %in% pcv13_serotypes, "PCV13",
  ifelse(df.gps$In_silico_serotype %in% pcv15_serotypes, "PCV15",
  ifelse(df.gps$In_silico_serotype %in% pcv20_serotypes, "PCV20",
  "OTHER"))))

df.gps2 <- df.gps %>%
  filter(Year >= 2009) %>%
  mutate(Disease_Status = ifelse(Clinical_manifestation == "CARRIAGE", "Carriage", "Disease")) %>%
  group_by(Year, Disease_Status) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Disease_Status)
```

Starting off by plotting counts of disease status over time. It looks like from the vaccine intro date, disease status declined slightly but now is rising back up to pre-vaccine levels. The number of people with a carriage status has risen as well.

New questions:

1\) What serotypes are included in these new cases?

2\) Are these serotypes included in other vaccines?

3\) Are some serotypes associated with carriage more than disease?

```{r}
p1 <- ggplot(df.gps2, aes(x = Year, y = count, color=Disease_Status)) +
      geom_line() +
      geom_point() +
      labs(title = "Cases of Pneumococcal Disease in Nepal Over time",
        x = "Year", y = "Count") +
      geom_vline(xintercept = 2015, col = 'red', lty = 2) +
      theme_linedraw()
p1
```

```{r negative binomial model fitting}
df.gps2 <- tibble::rownames_to_column(df.gps2, var = "index") %>%
  mutate(index = as.numeric(index))

df.gps.carriage <- df.gps2 %>%
  filter(Disease_Status == "Carriage")
mod.carriage <- glm.nb(data = df.gps.carriage, count ~ index)
pred.carriage <- predict(mod.carriage, type = "response", se.fit = TRUE)
df.pred.carriage <- df.gps.carriage %>%
  mutate(se.fit = pred.carriage$se.fit, 
         pred.carriage = pred.carriage$fit) %>%
  mutate(conf.low.carriage = pred.carriage - 1.96 * se.fit,
         conf.high.carriage = pred.carriage + 1.96 * se.fit)

df.gps.disease <- df.gps2 %>%
  filter(Disease_Status == "Disease")
mod.disease <- glm.nb(data = df.gps.disease, count ~ index)
pred.disease <- predict(mod.disease, type = "response", se.fit = TRUE)
df.pred.disease <- df.gps.disease %>%
  mutate(se.fit = pred.disease$se.fit, 
         pred.disease = pred.disease$fit) %>%
  mutate(conf.low.disease = pred.disease - 1.96 * se.fit,
         conf.high.disease = pred.disease + 1.96 * se.fit)

p1a <- p1 +
  geom_line(data = df.pred.carriage, 
            aes(x = Year, y = pred.carriage),
            color = "red") +
  geom_ribbon(data = df.pred.carriage, 
              aes(ymin = conf.low.carriage, 
                  ymax = conf.high.carriage), 
              alpha = 0.2, fill = "blue") +
  geom_line(data = df.pred.disease, 
            aes(x = Year, y = pred.disease),
            color = "blue") +
  geom_ribbon(data = df.pred.disease, 
              aes(ymin = conf.low.disease, 
                  ymax = conf.high.disease), 
              alpha = 0.2, fill = "lightblue") +
  labs(title = "Negative Binomial Fit of Pneumococcal Trends in Nepal")+
  theme(plot.title = element_text(face="bold"))
p1a
```
