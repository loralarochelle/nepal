---
title: "counterfactual"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
nepal_shortened <- nepal_gps[, c("Year", "Clinical_manifestation", "In_silico_serotype")]
pcv10_serotypes <- c('1', '4', '5', '6B', '7F', '9V', '14', '18C', '19F', '23F')
pcv13_serotypes <- c('3', '6A', '19A')
pcv15_serotypes <- c('22F', '33F')
pcv20_serotypes <- c('8', '10A', '11A', '12F', '15B')

nepal_shortened$In_silico_serotype <- ifelse(
  nepal_shortened$In_silico_serotype %in% pcv10_serotypes, "PCV 10",
  ifelse(nepal_shortened$In_silico_serotype %in% pcv13_serotypes, "PCV 13",
    ifelse(nepal_shortened$In_silico_serotype %in% pcv15_serotypes, "PCV 15",
      ifelse(nepal_shortened$In_silico_serotype %in% pcv20_serotypes, "PCV 20",
        "Other"
      )
    )
  )
)



```

```{r}
library(dplyr)
library(ggplot2)

# Filter to relevant clinical manifestations
nepal_filtered <- nepal_shortened %>%
  filter(Clinical_manifestation %in% c("MENINGITIS", "PNEUMONIA", "SEPSIS"))

# Count serotype occurrences within each clinical manifestation
df_pie <- nepal_filtered %>%
  group_by(Clinical_manifestation, In_silico_serotype) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Clinical_manifestation) %>%
  mutate(prop = count / sum(count))

# Plot: one full pie per clinical manifestation, using proportions
ggplot(df_pie, aes(x = "", y = prop, fill = In_silico_serotype)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  facet_wrap(~ Clinical_manifestation) +
  theme_void() +
  labs(title = "Serotype Distribution by Clinical Manifestation",
       fill = "Serotype")

```

```{r}

#I think that we need to switch this from a time series of counts to a time series of proportion of disease vs carriage also need to add in the observed data to the plot either way; 




library(dplyr)
library(ggplot2)
library(MASS) # for glm.nb
library(scales) # for date axis formatting

#take out data before 2009 
nepal_shortened <- nepal_shortened %>%
  filter(Year >= 2009)

vax.intro.year <- 2015



# Create a binary variable: 1 = pneumonia, 0 = not pneumonia
nepal_shortened <- nepal_shortened %>%
  mutate(
    pneumonia_binary = ifelse(Clinical_manifestation == c("PNEUMONIA","SEPSIS", "MENINGITIS"), 1, 0),
    pneumonia_binary = ifelse(Year >= vax.intro.year, NA, pneumonia_binary)
  )


# Create index (time trend) and log offset (can be set to 0 or 1 if no population data)
nepal_shortened <- nepal_shortened %>%
  arrange(Year) %>%
  mutate(
    index = Year - min(Year),
    log_offset = log(1)  # Replace 1 with population if available
  )


library(MASS)
# Fit the model using only rows where pneumonia_binary is not NA
mod_data <- nepal_shortened %>% filter(!is.na(pneumonia_binary))

mod_trend <- glm.nb(pneumonia_binary ~ index + offset(log_offset), data = mod_data)

# Predict using full data (extrapolate for post-vaccine period)
nepal_shortened <- nepal_shortened %>%
  mutate(pred_trend = predict(mod_trend, newdata = nepal_shortened, type = "response"))


```

```{r}

library(ggplot2)

ggplot(nepal_shortened, aes(x = Year)) +
  geom_point(aes(y = pneumonia_binary), color = "black") +
  geom_line(aes(y = pred_trend), color = "#377eb8", linewidth = 1) +
  labs(title = "Observed vs Counterfactual Pneumonia Cases",
       y = "Cases", x = "Year") +
  theme_minimal()


```

```{r}
#nepal_shortened$rr_trend <- nepal_shortened$pneumonia_binary / nepal_shortened$pred_trend
#eval_period <- nepal_shortened$Year >= vax.intro.year

#rr_trend_eval <- mean(nepal_shortened$rr_trend[eval_period], na.rm = TRUE)
#percent_decline <- 100 * (1 - rr_trend_eval)

#round(c("RR" = rr_trend_eval, "Percent Decline" = percent_decline), 2)

```

```{r}


```
